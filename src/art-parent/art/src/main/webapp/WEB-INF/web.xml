<?xml version="1.0" encoding="UTF-8"?>
<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">
    <display-name>ART - A Reporting Tool</display-name>
    <description>
		This is an application to perform
		a wild and wonderful task, based on servlets and jsp.
		It was written by eliboni@users.sourceforge.net
		who should be contacted for more information.
		Web site http://art.sourceforge.net
	</description>
    <context-param>
        <description>ART Version Number</description>
        <param-name>versionNumber</param-name>
        <param-value>5.6</param-value>
    </context-param>
    <error-page>
        <exception-type>java.lang.Throwable</exception-type>
        <location>/error</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/error-404</location>
    </error-page>
    <error-page>
        <error-code>405</error-code>
        <location>/error-405</location>
    </error-page>
    <error-page>
        <error-code>400</error-code>
        <location>/error-400</location>
    </error-page>
    <error-page>
        <error-code>500</error-code>
        <location>/error-500</location>
    </error-page>
	<error-page>
        <error-code>403</error-code>
        <location>/error-403</location>
    </error-page>

    <!-- Start CAS configuration 

	<filter>
	   <filter-name>CAS Single Sign Out Filter</filter-name>
	   <filter-class>org.jasig.cas.client.session.SingleSignOutFilter</filter-class>
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>https://localhost:8443/cas</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>CAS Authentication Filter</filter-name>
		<filter-class>org.jasig.cas.client.authentication.AuthenticationFilter</filter-class>
		<init-param>
			<param-name>casServerLoginUrl</param-name>
			<param-value>https://localhost:8443/cas/login</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://localhost:8084/art</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>CAS Validation Filter</filter-name>
		<filter-class>org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter</filter-class>	
		<init-param>
			<param-name>casServerUrlPrefix</param-name>
			<param-value>https://localhost:8443/cas</param-value>
		</init-param>
		<init-param>
			<param-name>serverName</param-name>
			<param-value>http://localhost:8084/art</param-value>
		</init-param>
		<init-param>
			<param-name>redirectAfterValidation</param-name>
			<param-value>true</param-value>
		</init-param>
		<init-param>
			<param-name>useSession</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>

	<filter>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<filter-class>org.jasig.cas.client.util.HttpServletRequestWrapperFilter</filter-class>
	</filter>

	<filter-mapping>
	   <filter-name>CAS Single Sign Out Filter</filter-name>
	   <url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Authentication Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS Validation Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	<filter-mapping>
		<filter-name>CAS HttpServletRequest Wrapper Filter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<listener>
		<listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
	</listener>

	End CAS configuration -->
	<!-- order of filter mapping is important. filters executed in the order of filter-mapping elements -->
	<!-- https://stackoverflow.com/questions/7938050/what-will-the-the-order-in-which-filters-will-be-called -->
	<!-- https://stackoverflow.com/questions/6560969/how-to-define-servlet-filter-order-of-execution-using-annotations-in-war -->
	<filter>
		<filter-name>JPivotController</filter-name>
		<filter-class>net.sf.wcfart.wcf.controller.RequestFilter</filter-class>
		<init-param>
			<description>URI of error page</description>
			<param-name>errorJSP</param-name>
			<param-value>/jpivotError</param-value>
		</init-param>
		<init-param>
			<description>This page is displayed if a user clicks
				on a query before the previous query has finished
			</description>
			<param-name>busyJSP</param-name>
			<param-value>/jpivotBusy</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>JPivotController</filter-name>
		<url-pattern>/showJPivot</url-pattern>
	</filter-mapping>
	<servlet>
		<servlet-name>CewolfServlet</servlet-name>
		<servlet-class>net.sf.cewolfart.CewolfRenderer</servlet-class>
		<init-param>
			<param-name>overliburl</param-name>
			<!-- leave blank to use custom tooltips instead of overlib -->
			<param-value/>
		</init-param>
		<init-param>
			<param-name>debug</param-name>
			<param-value>false</param-value>
		</init-param>
		<init-param>
			<param-name>storage</param-name>
			<!-- use long term storage instead of transient storage so that charts are available for printing -->
			<param-value>net.sf.cewolfart.storage.LongTermSessionStorage</param-value>
		</init-param>
		<init-param>
			<param-name>maxImageWidth</param-name>
			<param-value>2048</param-value>
		</init-param>
		<init-param>
			<param-name>maxImageHeight</param-name>
			<param-value>1024</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>CewolfServlet</servlet-name>
		<url-pattern>/cewolf/*</url-pattern>
	</servlet-mapping>
	<servlet>
		<!-- description, if it exists, must come before servlet-name -->
		<description>
			Initialize ART settings and database connection pools
		</description>
		<servlet-name>ArtConfig</servlet-name>
		<servlet-class>art.servlets.Config</servlet-class>
		<!-- Load this servlet at server startup time -->
		<load-on-startup>2</load-on-startup>
	</servlet>
	<session-config>
		<!-- timeout in minutes -->
		<session-timeout>120</session-timeout>
	</session-config>
	<!-- JPivot -->
	<context-param>
		<param-name>contextFactory</param-name>
		<param-value>net.sf.wcfart.wcf.controller.RequestContextFactoryImpl</param-value>
	</context-param>
	<listener>
		<listener-class>net.sf.mondrianart.mondrian.web.taglib.Listener</listener-class>
	</listener>
	<!-- resources initializer -->
	<listener>
		<listener-class>net.sf.wcfart.tbutils.res.ResourcesFactoryContextListener</listener-class>
	</listener>
	<servlet>
		<servlet-name>MDXQueryServlet</servlet-name>
		<servlet-class>net.sf.mondrianart.mondrian.web.servlet.MdxQueryServlet</servlet-class>
	</servlet>
	<!-- jfreechart provided servlet -->
	<servlet>
		<servlet-name>DisplayChart</servlet-name>
		<servlet-class>org.jfree.chart.servlet.DisplayChart</servlet-class>
	</servlet>
	<servlet>
		<description>Default configuration created for servlet.</description>
		<display-name>GetChart</display-name>
		<servlet-name>GetChart</servlet-name>
		<servlet-class>net.sf.jpivotart.jpivot.chart.GetChart</servlet-class>
	</servlet>
	<servlet>
		<description>Default configuration created for servlet.</description>
		<display-name>Print</display-name>
		<servlet-name>Print</servlet-name>
		<servlet-class>net.sf.jpivotart.jpivot.print.PrintServlet</servlet-class>
	</servlet>
	<servlet-mapping>
		<servlet-name>DisplayChart</servlet-name>
		<url-pattern>/DisplayChart</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>Print</servlet-name>
		<url-pattern>/Print</url-pattern>
	</servlet-mapping>
	<servlet-mapping>
		<servlet-name>GetChart</servlet-name>
		<url-pattern>/GetChart</url-pattern>
	</servlet-mapping>
	<!-- End JPivot -->
	<servlet>
		<servlet-name>Mondrian4XmlaServlet</servlet-name>
		<servlet-class>art.servlets.Mondrian4XmlaServlet</servlet-class>
		<init-param>
			<param-name>CharacterEncoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>Mondrian4XmlaServlet</servlet-name>
		<url-pattern>/xmla</url-pattern>
	</servlet-mapping>
	<servlet>
		<servlet-name>Mondrian3XmlaServlet</servlet-name>
		<servlet-class>art.servlets.Mondrian3XmlaServlet</servlet-class>
		<init-param>
			<param-name>CharacterEncoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>Mondrian3XmlaServlet</servlet-name>
		<url-pattern>/xmla2</url-pattern>
	</servlet-mapping>
</web-app>
